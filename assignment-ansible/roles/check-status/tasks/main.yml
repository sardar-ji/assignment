---
- name: Check if rbcapp1 is up
  uri:
    url: "http://127.0.0.1:5000/healthcheck"
    method: GET
    return_content: yes
    body_format: json
    status_code: 200
  register: rbcapp1_api_status_output
  when: action == "check-status"

- debug:
    msg: "{{ rbcapp1_api_status_output }}"

- name: Fail if rbcapp1 is down 
  when: action == "check-status" 
  
  fail:
  when: "'UP' not in rbcapp1_api_status_output.content"


- name: Check if httpd is up
  uri:
    url: "http://127.0.0.1:5000/healthcheck/httpd"
    method: GET
    return_content: yes
    body_format: json
    status_code: 200
  register: httpd_api_status_output
  when: action == "check-status"

- name: Fail if httpd is down 
  when: action == "check-status" 
 
  fail:
  when: "'UP' not in httpd_api_status_output.content"

- name: Check if rabbitmq is up
  uri:
    url: "http://127.0.0.1:5000/healthcheck/rabbitmq"
    method: GET
    return_content: yes
    body_format: json
    status_code: 200
  register: rabbitmq_api_status_output
  when: action == "check-status"

- name: Fail if rabbitmq is down 
  when: action == "check-status" 
  
  fail:
  when: "'UP' not in rabbitmq_api_status_output.content"


- name: Check if postgresql is up
  uri:
    url: "http://127.0.0.1:5000/healthcheck/postgresql"
    method: GET
    return_content: yes
    body_format: json
    status_code: 200
  register: postgresql_api_status_output
  when: action == "check-status"

- name: Fail if postgreSQL is down 
  when: action == "check-status" 
  
  fail:
  when: "'UP' not in postgresql_api_status_outpu.content"
  
  
#Use below code if all the service is installed on single server

#- name: Check if rbcapp1 is up
#  uri:
#    url: "http://127.0.0.1:5000/healthcheck/{{ item }}"
#    method: GET
#    return_content: yes
#    body_format: json
#    status_code: 200
#  register: this
#  failed_when: "'UP' not in this.content"
#  loop:
#    - rabbitmq"
#    - httpd"
#    - postgresql"
#  when: action == "check-status"

#- debug:
#    msg: "this.content"
~                                                                                                                                                      


